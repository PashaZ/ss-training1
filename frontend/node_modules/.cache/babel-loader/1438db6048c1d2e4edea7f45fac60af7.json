{"ast":null,"code":"var _jsxFileName = \"C:\\\\training\\\\ss-training1\\\\frontend\\\\src\\\\components\\\\Nav\\\\Nav.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { Link } from \"react-router-dom\";\n// import Logo from \"../../pages/Logo\";\n\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem'; // import Link from '@mui/material/Link';\n\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav(_ref) {\n  _s();\n\n  let {\n    LinkArray\n  } = _ref;\n  const [anchorElNav, setAnchorElNav] = React.useState(null); // const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  }; // const handleOpenUserMenu = (event) => {\n  //   setAnchorElUser(event.currentTarget);\n  // };\n\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  }; // const handleCloseUserMenu = () => {\n  //   setAnchorElUser(null);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            mr: 2,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: \"LOGO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            \"aria-label\": \"account of current user\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleOpenNavMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"menu-appbar\",\n            anchorEl: anchorElNav,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left'\n            },\n            open: Boolean(anchorElNav),\n            onClose: handleCloseNavMenu,\n            sx: {\n              display: {\n                xs: 'block',\n                md: 'none'\n              }\n            },\n            children: LinkArray.map(link => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleCloseNavMenu,\n              children: [\"href=\", link.path, /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                children: link.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, link.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: \"LOGO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: LinkArray.map(link => /*#__PURE__*/_jsxDEV(Button, {\n            href: link.path // onClick={handleCloseNavMenu}\n            ,\n            sx: {\n              my: 2,\n              color: 'white',\n              display: 'block'\n            },\n            children: link.label\n          }, link.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"ePvnpKc/xBhdzxOErjusXPUdwkI=\");\n\n_c = Nav;\n; // <AppBar position=\"static\">\n//   <Container maxWidth=\"xl\">\n//   <Toolbar disableGutters>\n//         <Logo/> \n//         <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n//         <IconButton\n//           size=\"large\"\n//           aria-label=\"account of current user\"\n//           aria-controls=\"menu-appbar\"\n//           aria-haspopup=\"true\"\n//           onClick={handleOpenNavMenu}\n//           color=\"inherit\"\n//         >\n//           <MenuIcon />\n//         </IconButton>\n//         <Menu\n//           id=\"menu-appbar\"\n//           anchorEl={anchorElNav}\n//           anchorOrigin={{\n//             vertical: 'bottom',\n//             horizontal: 'left',\n//           }}\n//           keepMounted\n//           transformOrigin={{\n//             vertical: 'top',\n//             horizontal: 'left',\n//           }}\n//           open={Boolean(anchorElNav)}\n//           onClose={handleCloseNavMenu}\n//           sx={{\n//             display: { xs: 'block', md: 'none' },\n//           }}\n//         >  \n//           {/* {LinkArray.map((link) => (\n//             <MenuItem key={link} >\n//               <Link href={link.path} textAlign=\"center\">{link.label}</Link>\n//             </MenuItem>\n//           ))} */}\n//                 {/* </Menu> */}\n//     {LinkArray.map((link) => (\n//       <MenuItem key={link.id}>\n//         <Link rel=\"noreferrer\" href={link.path} color=\"inherit\" underline=\"none\">{link.label}</Link>\n//       </MenuItem>\n//     ))}\n//      </Menu>\n//       </Box>\n// </Toolbar>\n// </Container>\n// </AppBar>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/training/ss-training1/frontend/src/components/Nav/Nav.js"],"names":["React","AppBar","Toolbar","Container","Typography","Menu","MenuItem","Box","IconButton","MenuIcon","Button","Nav","LinkArray","anchorElNav","setAnchorElNav","useState","handleOpenNavMenu","event","currentTarget","handleCloseNavMenu","mr","display","xs","md","flexGrow","vertical","horizontal","Boolean","map","link","path","label","id","my","color"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// import Logo from \"../../pages/Logo\";\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n// import Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Button from '@mui/material/Button';\n\nexport default function Nav({ LinkArray }) {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  // const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  // const handleOpenUserMenu = (event) => {\n  //   setAnchorElUser(event.currentTarget);\n  // };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  // const handleCloseUserMenu = () => {\n  //   setAnchorElUser(null);\n  // };\n  return (\n    <AppBar position=\"static\">\n    <Container maxWidth=\"xl\">\n      <Toolbar disableGutters>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n        >\n          LOGO\n        </Typography>\n\n        <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n          <IconButton\n            size=\"large\"\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={handleOpenNavMenu}\n            color=\"inherit\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorElNav}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            open={Boolean(anchorElNav)}\n            onClose={handleCloseNavMenu}\n            sx={{\n              display: { xs: 'block', md: 'none' },\n            }}\n          >\n            {LinkArray.map((link) => (\n              <MenuItem key={link.id} \n              onClick={handleCloseNavMenu}>\nhref={link.path}\n                <Typography textAlign=\"center\">{link.label}</Typography>\n              </MenuItem>\n            ))}\n          </Menu>\n        </Box>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n        >\n          LOGO\n        </Typography>\n        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n          {LinkArray.map((link) => (\n            <Button\n              key={link.id}\n              href={link.path}\n              // onClick={handleCloseNavMenu}\n              sx={{ my: 2, color: 'white', display: 'block' }}\n            >\n              {link.label}\n            </Button>\n          ))}\n        </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\n    // <AppBar position=\"static\">\n    //   <Container maxWidth=\"xl\">\n    //   <Toolbar disableGutters>\n    //         <Logo/> \n\n    //         <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n    //         <IconButton\n    //           size=\"large\"\n    //           aria-label=\"account of current user\"\n    //           aria-controls=\"menu-appbar\"\n    //           aria-haspopup=\"true\"\n    //           onClick={handleOpenNavMenu}\n    //           color=\"inherit\"\n    //         >\n    //           <MenuIcon />\n    //         </IconButton>\n    //         <Menu\n    //           id=\"menu-appbar\"\n    //           anchorEl={anchorElNav}\n    //           anchorOrigin={{\n    //             vertical: 'bottom',\n    //             horizontal: 'left',\n    //           }}\n    //           keepMounted\n    //           transformOrigin={{\n    //             vertical: 'top',\n    //             horizontal: 'left',\n    //           }}\n    //           open={Boolean(anchorElNav)}\n    //           onClose={handleCloseNavMenu}\n    //           sx={{\n    //             display: { xs: 'block', md: 'none' },\n    //           }}\n    //         >  \n                      \n    //           {/* {LinkArray.map((link) => (\n    //             <MenuItem key={link} >\n    //               <Link href={link.path} textAlign=\"center\">{link.label}</Link>\n    //             </MenuItem>\n    //           ))} */}\n    //                 {/* </Menu> */}\n\n    //     {LinkArray.map((link) => (\n    //       <MenuItem key={link.id}>\n    //         <Link rel=\"noreferrer\" href={link.path} color=\"inherit\" underline=\"none\">{link.label}</Link>\n    //       </MenuItem>\n    //     ))}\n    //      </Menu>\n    //       </Box>\n    // </Toolbar>\n    // </Container>\n    // </AppBar>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}