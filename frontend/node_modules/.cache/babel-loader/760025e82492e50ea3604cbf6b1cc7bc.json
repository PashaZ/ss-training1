{"ast":null,"code":"var _jsxFileName = \"C:\\\\training\\\\ss-training1\\\\frontend\\\\src\\\\pages\\\\Product.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import {Link} from 'react-router-dom';\n// import ProductArray from \"../mocks/ProductArray\";\n// export default function Product() {\n//         return (\n//         <ul>\n//             {ProductArray.map(product=>\n//             <li key={product.id}>\n//                 <Link to={`/product/${product.id}`}>\n//                 {product.name}\n//                 </Link>\n//             </li>)}\n//         </ul>\n//     )     \n// }\n// import ProductArray from \"../mocks/ProductArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Product() {\n  _s();\n\n  const [productArray, setProductArray] = useState([]);\n  useEffect(() => {\n    async function fetchSubmit() {\n      const rv = await (await fetch(\"http://localhost:8080/api/users\")).json();\n      setProductArray(rv);\n    }\n\n    fetchSubmit();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: productArray === null || productArray === void 0 ? void 0 : productArray.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/product/${product.id}`,\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Product, \"PIOEOaY5arjnfOd+i/zQPMiNrWc=\");\n\n_c = Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["C:/training/ss-training1/frontend/src/pages/Product.js"],"names":["React","useEffect","useState","Link","Product","productArray","setProductArray","fetchSubmit","rv","fetch","json","map","product","id","name"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeM,WAAf,GAA6B;AAC3B,YAAMC,EAAE,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAC,iCAAD,CAAZ,EAAiDC,IAAjD,EAAjB;AACAJ,MAAAA,eAAe,CAACE,EAAD,CAAf;AACD;;AACDD,IAAAA,WAAW;AACZ,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,cACGF,YADH,aACGA,YADH,uBACGA,YAAY,CAAEM,GAAd,CAAmBC,OAAD,iBACjB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWA,OAAO,CAACC,EAAG,EAAjC;AAAA,kBAAqCD,OAAO,CAACE;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF,OAASF,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GApBuBT,O;;KAAAA,O","sourcesContent":["// import React from \"react\";\r\n// import {Link} from 'react-router-dom';\r\n// import ProductArray from \"../mocks/ProductArray\";\r\n\r\n// export default function Product() {\r\n//         return (\r\n//         <ul>\r\n//             {ProductArray.map(product=>\r\n//             <li key={product.id}>\r\n//                 <Link to={`/product/${product.id}`}>\r\n//                 {product.name}\r\n//                 </Link>\r\n//             </li>)}\r\n//         </ul>\r\n//     )     \r\n// }\r\n\r\n\r\n// import ProductArray from \"../mocks/ProductArray\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Product() {\r\n  const [productArray, setProductArray] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchSubmit() {\r\n      const rv = await (await fetch(\"http://localhost:8080/api/users\")).json();\r\n      setProductArray(rv);\r\n    }\r\n    fetchSubmit();\r\n  }, []);\r\n\r\n  return (\r\n    <ul>\r\n      {productArray?.map((product) => (\r\n        <li key={product.id}>\r\n          <Link to={`/product/${product.id}`}>{product.name}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n}\r\n   "]},"metadata":{},"sourceType":"module"}