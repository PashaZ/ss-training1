{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = (url, fetchData) => {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const request = async () => {\n      const res = await fetch(url, fetchData);\n      const data = await res.json();\n\n      if (!res.ok) {\n        throw new Error(\"Something was wrong\");\n      } else {\n        return setData(data);\n      }\n    };\n\n    try {\n      if (url) {\n        request();\n      }\n    } catch (error) {\n      return error;\n    }\n  }, [url]);\n  return data;\n};\n\n_s(useFetch, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/training/ss-training1/frontend/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","fetchData","data","setData","request","res","fetch","json","ok","Error","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,SAAN,KAAoB;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAMC,SAAN,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAAnB;;AACA,UAAI,CAACF,GAAG,CAACG,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD,OAFD,MAEO;AACL,eAAON,OAAO,CAACD,IAAD,CAAd;AACD;AACF,KARD;;AASA,QAAI;AACF,UAAIF,GAAJ,EAAS;AACPI,QAAAA,OAAO;AACR;AACF,KAJD,CAIE,OAAOM,KAAP,EAAc;AACd,aAAOA,KAAP;AACD;AACF,GAjBQ,EAiBN,CAACV,GAAD,CAjBM,CAAT;AAkBA,SAAQE,IAAR;AACD,CAtBD;;GAAMH,Q;;AAuBN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url, fetchData) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const request = async () => {\n      const res = await fetch(url, fetchData);\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(\"Something was wrong\");\n      } else {\n        return setData(data);\n      }\n    };\n    try {\n      if (url) {\n        request();\n      }\n    } catch (error) {\n      return error;\n    }\n  }, [url]);\n  return  data ;\n};\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}