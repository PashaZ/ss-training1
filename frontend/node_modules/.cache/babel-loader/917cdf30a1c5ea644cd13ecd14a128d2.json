{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// const useFetch = (url, fetchData) => {\n//   const [data, setData] = useState(null);\n//   useEffect(() => {\n//     const request = async () => {\n//       const res = await fetch(url, fetchData);\n//       const data = await res.json();\n//       if (!res.ok) {\n//         throw new Error(\"Something was wrong\");\n//       } else {\n//         return setData(data);\n//       }\n//     };\n//     try {\n//       if (url) {\n//         request();\n//       }\n//     } catch (error) {\n//       return error;\n//     }\n//   }, [url]);\n//   return { data };\n// };\n// export default useFetch;","map":{"version":3,"sources":["C:/training/ss-training1/frontend/src/hooks/useFetch.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { useState, useEffect } from \"react\";\n\n// const useFetch = (url, fetchData) => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     const request = async () => {\n//       const res = await fetch(url, fetchData);\n//       const data = await res.json();\n//       if (!res.ok) {\n//         throw new Error(\"Something was wrong\");\n//       } else {\n//         return setData(data);\n//       }\n//     };\n//     try {\n//       if (url) {\n//         request();\n//       }\n//     } catch (error) {\n//       return error;\n//     }\n//   }, [url]);\n//   return { data };\n// };\n// export default useFetch;\n"]},"metadata":{},"sourceType":"module"}