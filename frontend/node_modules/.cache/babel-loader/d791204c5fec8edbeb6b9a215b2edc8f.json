{"ast":null,"code":"var _jsxFileName = \"C:\\\\training\\\\ss-training1\\\\frontend\\\\src\\\\components\\\\Nav\\\\Nav.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport Logo from \"../../pages/Logo\";\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav(_ref) {\n  _s();\n\n  let {\n    LinkArray\n  } = _ref;\n  const [anchorElNav, setAnchorElNav] = React.useState(null); // const [anchorElUser, setAnchorElUser] = React.useState(null);\n  // const handleOpenNavMenu = (event) => {\n  //   setAnchorElNav(event.currentTarget);\n  // };\n  // const handleOpenUserMenu = (event) => {\n  //   setAnchorElUser(event.currentTarget);\n  // };\n  // const handleCloseNavMenu = () => {\n  //   setAnchorElNav(null);\n  // };\n  // const handleCloseUserMenu = () => {\n  //   setAnchorElUser(null);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            mr: 2,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), LinkArray.map(link => /*#__PURE__*/_jsxDEV(MenuItem, {\n          href: link.path,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            textAlign: \"center\",\n            children: link.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, link.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"ePvnpKc/xBhdzxOErjusXPUdwkI=\");\n\n_c = Nav;\n; // <AppBar position=\"static\">\n//   <Container maxWidth=\"xl\">\n//   <Toolbar disableGutters>\n//         <Logo/> \n//         <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n//         <IconButton\n//           size=\"large\"\n//           aria-label=\"account of current user\"\n//           aria-controls=\"menu-appbar\"\n//           aria-haspopup=\"true\"\n//           onClick={handleOpenNavMenu}\n//           color=\"inherit\"\n//         >\n//           <MenuIcon />\n//         </IconButton>\n//         <Menu\n//           id=\"menu-appbar\"\n//           anchorEl={anchorElNav}\n//           anchorOrigin={{\n//             vertical: 'bottom',\n//             horizontal: 'left',\n//           }}\n//           keepMounted\n//           transformOrigin={{\n//             vertical: 'top',\n//             horizontal: 'left',\n//           }}\n//           open={Boolean(anchorElNav)}\n//           onClose={handleCloseNavMenu}\n//           sx={{\n//             display: { xs: 'block', md: 'none' },\n//           }}\n//         >  \n//           {/* {LinkArray.map((link) => (\n//             <MenuItem key={link} >\n//               <Link href={link.path} textAlign=\"center\">{link.label}</Link>\n//             </MenuItem>\n//           ))} */}\n//                 {/* </Menu> */}\n//     {LinkArray.map((link) => (\n//       <MenuItem key={link.id}>\n//         <Link rel=\"noreferrer\" href={link.path} color=\"inherit\" underline=\"none\">{link.label}</Link>\n//       </MenuItem>\n//     ))}\n//      </Menu>\n//       </Box>\n// </Toolbar>\n// </Container>\n// </AppBar>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/training/ss-training1/frontend/src/components/Nav/Nav.js"],"names":["React","Logo","AppBar","Toolbar","Container","Typography","Menu","MenuItem","Link","Box","IconButton","MenuIcon","Button","Nav","LinkArray","anchorElNav","setAnchorElNav","useState","mr","display","xs","md","map","link","path","label","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,eAAe,SAASC,GAAT,OAA4B;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,KAAK,CAACiB,QAAN,CAAe,IAAf,CAAtC,CADyC,CAEzC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA,sBACE,QAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAAA,2BACA,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,cAAc,MAAvB;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,OAAO,EAAC,IADV;AAEE,UAAA,MAAM,MAFR;AAGE,UAAA,SAAS,EAAC,KAHZ;AAIE,UAAA,EAAE,EAAE;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,EAAE,EAAE,MAAN;AAAcC,cAAAA,EAAE,EAAE;AAAlB;AAAlB,WAJN;AAAA,iCAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBADF,EAUOP,SAAS,CAACQ,GAAV,CAAeC,IAAD,iBACb,QAAC,QAAD;AACb,UAAA,IAAI,EAAEA,IAAI,CAACC,IADE;AAAA,iCAEE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,QAAtB;AAAA,sBAAgCD,IAAI,CAACE;AAArC;AAAA;AAAA;AAAA;AAAA;AAFF,WAAeF,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD,CAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GA7DuBb,G;;KAAAA,G;AA6DvB,C,CAEG;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA","sourcesContent":["import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport Logo from \"../../pages/Logo\";\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Button from '@mui/material/Button';\n\nexport default function Nav({ LinkArray }) {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  // const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  // const handleOpenNavMenu = (event) => {\n  //   setAnchorElNav(event.currentTarget);\n  // };\n  // const handleOpenUserMenu = (event) => {\n  //   setAnchorElUser(event.currentTarget);\n  // };\n\n  // const handleCloseNavMenu = () => {\n  //   setAnchorElNav(null);\n  // };\n\n  // const handleCloseUserMenu = () => {\n  //   setAnchorElUser(null);\n  // };\n  return (\n    <AppBar position=\"static\">\n    <Container maxWidth=\"xl\">\n      <Toolbar disableGutters>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n        >\n          <Logo/>\n        </Typography>\n\n            {LinkArray.map((link) => (\n              <MenuItem key={link.id} \n href={link.path} >\n                <Typography textAlign=\"center\">{link.label}</Typography>\n              </MenuItem>\n            ))}\n        {/* <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n        >\n          <Logo/>\n        </Typography>\n        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}> */}\n          {/* {LinkArray.map((link) => (\n            <Button\n              key={link.id}\n              href={link.path}\n              // onClick={handleCloseNavMenu}\n              sx={{ my: 2, color: 'white', display: 'block' }}\n            >\n              {link.label}\n            </Button>\n          ))}\n        </Box> */}\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\n    // <AppBar position=\"static\">\n    //   <Container maxWidth=\"xl\">\n    //   <Toolbar disableGutters>\n    //         <Logo/> \n\n    //         <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n    //         <IconButton\n    //           size=\"large\"\n    //           aria-label=\"account of current user\"\n    //           aria-controls=\"menu-appbar\"\n    //           aria-haspopup=\"true\"\n    //           onClick={handleOpenNavMenu}\n    //           color=\"inherit\"\n    //         >\n    //           <MenuIcon />\n    //         </IconButton>\n    //         <Menu\n    //           id=\"menu-appbar\"\n    //           anchorEl={anchorElNav}\n    //           anchorOrigin={{\n    //             vertical: 'bottom',\n    //             horizontal: 'left',\n    //           }}\n    //           keepMounted\n    //           transformOrigin={{\n    //             vertical: 'top',\n    //             horizontal: 'left',\n    //           }}\n    //           open={Boolean(anchorElNav)}\n    //           onClose={handleCloseNavMenu}\n    //           sx={{\n    //             display: { xs: 'block', md: 'none' },\n    //           }}\n    //         >  \n                      \n    //           {/* {LinkArray.map((link) => (\n    //             <MenuItem key={link} >\n    //               <Link href={link.path} textAlign=\"center\">{link.label}</Link>\n    //             </MenuItem>\n    //           ))} */}\n    //                 {/* </Menu> */}\n\n    //     {LinkArray.map((link) => (\n    //       <MenuItem key={link.id}>\n    //         <Link rel=\"noreferrer\" href={link.path} color=\"inherit\" underline=\"none\">{link.label}</Link>\n    //       </MenuItem>\n    //     ))}\n    //      </Menu>\n    //       </Box>\n    // </Toolbar>\n    // </Container>\n    // </AppBar>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}