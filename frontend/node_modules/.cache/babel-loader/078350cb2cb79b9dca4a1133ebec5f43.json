{"ast":null,"code":"var _jsxFileName = \"C:\\\\training\\\\ss-training1\\\\frontend\\\\src\\\\form\\\\form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useMessage } from '../hooks/message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormOfProduct() {\n  _s();\n\n  const [product, setProduct] = useState({\n    name: '',\n    price: ''\n  });\n  const message = useMessage();\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    message(error);\n  }, [error, message]);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setProduct({ ...product,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    //     if (product.name === '' || !product.price) {\n    //         alert('Write all fields!')\n    //    } else\n    //    {\n    event.preventDefault();\n    createNewProduct(product); // }\n  };\n\n  const createNewProduct = async () => {\n    const url = 'http://localhost:8080/api/products/form';\n    const fetchData = {\n      method: 'POST',\n      body: JSON.stringify(product),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const request = async () => {\n      const res = await fetch(url, fetchData);\n      const data = await res.json();\n\n      if (!res.ok) {\n        throw new Error(data.message || \"Something was wrong\");\n      }\n\n      return data;\n    };\n\n    try {\n      if (product) {\n        request();\n      }\n    } catch (error) {\n      setError(error.message);\n      throw error; // return error.message\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Name of product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Price of product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"price\",\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormOfProduct, \"NHbrrvlCG8Df5qhZpbljOvwwK3g=\", false, function () {\n  return [useMessage];\n});\n\n_c = FormOfProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormOfProduct\");","map":{"version":3,"sources":["C:/training/ss-training1/frontend/src/form/form.js"],"names":["React","useEffect","useState","useMessage","FormOfProduct","product","setProduct","name","price","message","error","setError","handleChange","event","value","target","handleSubmit","preventDefault","createNewProduct","url","fetchData","method","body","JSON","stringify","headers","request","res","fetch","data","json","ok","Error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC;AACnCK,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE;AAF4B,GAAD,CAAtC;AAIA,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAmBT,QAAQ,CAAC,IAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAClBQ,IAAAA,OAAO,CAACC,KAAD,CAAP;AAEK,GAHQ,EAGN,CAACA,KAAD,EAAQD,OAAR,CAHM,CAAT;;AAIA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAM;AAAEN,MAAAA,IAAF;AAAQO,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACAT,IAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAc,OAACE,IAAD,GAAQO;AAAtB,KAAD,CAAV;AACH,GAHD;;AAIA,QAAME,YAAY,GAAIH,KAAD,IAAW;AAChC;AACA;AACA;AACA;AACQA,IAAAA,KAAK,CAACI,cAAN;AACJC,IAAAA,gBAAgB,CAACb,OAAD,CAAhB,CAN4B,CAOpC;AACK,GARD;;AAUA,QAAMa,gBAAgB,GAAG,YAAY;AACjC,UAAMC,GAAG,GAAG,yCAAZ;AACA,UAAMC,SAAS,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,OAAf,CAFQ;AAGdoB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHK,KAAlB;;AAOA,UAAMC,OAAO,GAAG,YAAY;AACxB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,EAAMC,SAAN,CAAvB;AACA,YAAMS,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;;AACA,UAAI,CAACH,GAAG,CAACI,EAAT,EAAa;AACT,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACpB,OAAL,IAAgB,qBAA1B,CAAN;AACH;;AACC,aAAOoB,IAAP;AACD,KAPL;;AAQA,QAAI;AACA,UAAIxB,OAAJ,EAAa;AACTqB,QAAAA,OAAO;AACV;AACJ,KAJD,CAKA,OAAOhB,KAAP,EAAc;AACVC,MAAAA,QAAQ,CAACD,KAAK,CAACD,OAAP,CAAR;AACA,YAAMC,KAAN,CAFU,CAGV;AACH;AACJ,GA3BD;;AA6BA,sBACI;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAEJ;AAHd;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,QAAQ,EAAEA;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAaI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAxEuBR,a;UAKJD,U;;;KALIC,a","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport { useMessage } from '../hooks/message';\n\nexport default function FormOfProduct() {\n    const [product, setProduct] = useState({\n        name: '',\n        price: '',\n    });\n    const message = useMessage();\n    const [error, setError]= useState(null);\n\n    useEffect(()=>{\nmessage(error)\n\n    }, [error, message])\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setProduct({ ...product, [name]: value })\n    }\n    const handleSubmit = (event) => {\n    //     if (product.name === '' || !product.price) {\n    //         alert('Write all fields!')\n    //    } else\n    //    {\n            event.preventDefault();\n        createNewProduct(product);\n// }\n    };\n\n    const createNewProduct = async () => {\n        const url = 'http://localhost:8080/api/products/form' ;\n        const fetchData = {\n            method: 'POST',\n            body: JSON.stringify(product),\n            headers: {\n                'Content-Type': 'application/json'\n              },\n        };\n        const request = async () => {\n            const res = await fetch(url, fetchData);\n            const data = await res.json();\n            if (!res.ok) {\n                throw new Error(data.message || \"Something was wrong\")\n            }\n              return data\n            };\n        try {\n            if (product) {\n                request();\n            }\n        } \n        catch (error) {\n            setError(error.message)\n            throw error\n            // return error.message\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                <span>Name of product</span>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={handleChange}\n                ></input>\n            </label>\n            <label>\n                <span>Price of product</span>\n                <input name=\"price\" type=\"text\" onChange={handleChange}></input>\n            </label>\n            <button type=\"submit\">Add product</button>\n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}