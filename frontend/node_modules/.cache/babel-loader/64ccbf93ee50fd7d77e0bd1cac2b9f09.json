{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction useFetch(url, fetchData) {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const request = async () => {\n      const res = await fetch(url, fetchData);\n      const data = await res.json();\n\n      if (!res.ok) {\n        throw new Error(\"Something was wrong\");\n      } else {\n        return setData(data);\n        ;\n      }\n    };\n\n    try {\n      if (url) {\n        request();\n      }\n    } catch (error) {\n      return error;\n    }\n  }, [url]);\n  return {\n    data\n  };\n}\n\n_s(useFetch, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n;\nexport default useFetch;","map":{"version":3,"sources":["C:/training/ss-training1/frontend/src/hooks/useFetch.js"],"names":["useState","useEffect","useFetch","url","fetchData","data","setData","request","res","fetch","json","ok","Error","error"],"mappings":";;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,SAAvB,EAAiC;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,OAAO,GAAG,YAAY;AACxB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAMC,SAAN,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAAnB;;AACA,UAAI,CAACF,GAAG,CAACG,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACD,OAFD,MAEO;AACL,eAAON,OAAO,CAACD,IAAD,CAAd;AAAqB;AACtB;AACF,KARH;;AASE,QAAG;AACC,UAAIF,GAAJ,EAAQ;AACTI,QAAAA,OAAO;AACT;AAAC,KAHF,CAIA,OAAMM,KAAN,EAAY;AACR,aAAOA,KAAP;AACH;AACN,GAjBQ,EAiBN,CAACV,GAAD,CAjBM,CAAT;AAmBA,SAAO;AAAEE,IAAAA;AAAF,GAAP;AACD;;GAvBQH,Q;;AAuBR;AACD,eAAeA,QAAf","sourcesContent":["\r\nimport {useState, useEffect} from 'react'\r\n\r\nfunction useFetch(url, fetchData){\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n      const request = async () => {\r\n          const res = await fetch(url, fetchData);\r\n          const data = await res.json();\r\n          if (!res.ok) {\r\n            throw new Error(\"Something was wrong\");\r\n          } else {\r\n            return setData(data);;\r\n          }\r\n        }; \r\n        try{\r\n            if (url){\r\n           request();\r\n        }}\r\n        catch(error){\r\n            return error\r\n        }\r\n  }, [url]);\r\n\r\n  return { data };\r\n};\r\nexport default useFetch ;"]},"metadata":{},"sourceType":"module"}